{"version":3,"sources":["Components/Navigation.tsx","assets/education.svg","Components/CustomJumbotron.tsx","Pages/Home.tsx","Components/ProjectPanel.tsx","Components/PanelCollection.tsx","scripts/getRepos.ts","Pages/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigation","Navbar","collapseOnSelect","expand","variant","bg","Container","fluid","Toggle","to","className","Collapse","id","Nav","NavDropdown","title","Item","rel","target","href","CustomJumbotron","props","image","src","alt","imageAlt","imageStyle","header","children","Home","educationImg","ListGroup","ListGroupItem","ProjectPanel","Card","Body","Title","repo","name","Subtitle","language","Text","description","Link","html_url","homepage","PanelCollection","panels","repos","map","i","idx","getRepos","url","a","fetch","response","json","Projects","React","useState","setRepos","useEffect","then","data","length","App","path","exact","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ce06738.chunk.js","sourcesContent":["import {Nav, Navbar, NavDropdown, Container} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navigation()\r\n{\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" bg=\"primary\">\r\n            <Container fluid>\r\n                <Navbar.Toggle/>\r\n                <Link to=\"/\" className=\"navbar-brand\">Michael Gain</Link>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                    <Nav className=\"mr-left\">\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        <Link to=\"/projects\" className=\"nav-link\">Projects</Link>\r\n                        <NavDropdown title=\"Contact\" id=\"collapsible-nav-dropdown\">\r\n                            <NavDropdown.Item rel=\"noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/michael-gain-36212b184/\"> LinkedIn </NavDropdown.Item>\r\n                            <NavDropdown.Item rel=\"noreferrer\" target=\"_blank\" href=\"mailto:gainmikey@gmail.com\"> E-mail </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>    \r\n            </Container>\r\n            \r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/education.22fbaec0.svg\";","type Jumbo = {\r\n    image? : any,\r\n    imageAlt? : string,\r\n    imageStyle? : string,\r\n    header : string,\r\n    children : any,\r\n}\r\n\r\nfunction CustomJumbotron(props : Jumbo)\r\n{\r\n    let image;\r\n    if (props.image)\r\n        image = <img src={props.image} alt={props.imageAlt} className={props.imageStyle}/>\r\n\r\n    return (\r\n        <div className=\"mb-3 p-4 border rounded-3 jumbotron\">\r\n            <span className=\"float-start d-none d-sm-none d-md-block\">{image}</span>\r\n            <h1 className=\"display-4 d-none d-md-block d-lg-block\"> {props.header} </h1>\r\n            <h3 className=\"d-sm-block d-md-none\"> {props.header} </h3>\r\n\r\n            <hr className=\"my-4\"/>\r\n\r\n            {props.children}  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomJumbotron;","import educationImg from '../assets/education.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport { ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport CustomJumbotron from '../Components/CustomJumbotron'\r\n\r\nfunction Home()\r\n{\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"container\">\r\n                <CustomJumbotron header=\"About Me\">\r\n                    <p>My name is Michael Gain. I have just finished high school at Cabarrus Early College of Technology and at Rowan-Cabarrus Community College. \r\n                        There I earned my Associates degree in Information Technology, Computer Programming and Development. I will now be attending High Point University starting in January 2021.</p>\r\n\r\n                    <p>I love programming and everything computers. I have done a lot of programming in languages such as C++, C#, Python, \r\n                    JavaScript/TypeScript, and Visual Basic. I also do a little HTML and CSS. C# has quickly become my favorite language \r\n                    to use because of its flexibility and versatility. Programming is perfect for me because I love to come up with an idea \r\n                    and actually make it a reality.</p>\r\n\r\n                    <p>If I'm not programming I'm probably playing video games. My favorite type of games are massive \r\n                        openworld RPGs such as Skyrim, Witcher 3 and Cyberpunk 2077. These are my biggest inspiration for \r\n                        wanting to develop video games. My interest in programming goes back a few years before with Minecraft, \r\n                        seeing all the amazing mods that people could create inspired me to learn how to program.</p>\r\n                </CustomJumbotron>\r\n\r\n                <CustomJumbotron header=\"Education and Experience\" image={educationImg} imageStyle=\"education-img\">\r\n                    <p>I have finished High School and received my Associates in Information Technology, Computer Programming and Development. I am now attending High Point University.</p>\r\n                    <p>Most of my recent projects are listed on my <Link to=\"/projects\">Projects page</Link>. Other notable projects have been hosting a website using WAMP server, hosting game \r\n                    servers with various software, and processes associated with both such as port forwarding.</p>\r\n\r\n                    <p>I have also earned 3 certificates:</p>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroupItem>MTA for Software Development Fundamentals (C#)</ListGroupItem>\r\n                        <ListGroupItem>MTA for Introduction to Programming Using Javascript</ListGroupItem>\r\n                        <ListGroupItem>MTA for Introduction to Programming using Python</ListGroupItem>\r\n                    </ListGroup>\r\n                </CustomJumbotron>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { Card, ListGroup } from 'react-bootstrap';\r\nimport Repo from '../Types/Repo';\r\n\r\ninterface IPanel\r\n{\r\n    repo: Repo;\r\n}\r\n\r\nfunction ProjectPanel(props: IPanel)\r\n{\r\n    return ( \r\n        <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n            <Card className=\"mb-4 mr-1\" >\r\n                <Card.Body className=\"d-flex flex-column\">\r\n                    <Card.Title> {props.repo.name} </Card.Title>\r\n                    <Card.Subtitle> {props.repo.language} </Card.Subtitle>\r\n                    <Card.Text> {props.repo.description} </Card.Text>\r\n                    <ListGroup className=\"mt-auto list-group-flush\">\r\n                        <ListGroup.Item>\r\n                            <Card.Link target=\"_blank\" href={props.repo.html_url}>Repo here</Card.Link>\r\n                            { props.repo.homepage ? <Card.Link target=\"_blank\" href={props.repo.homepage} className=\"mt-auto\">Site here</Card.Link> : ''}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectPanel;","import React from \"react\";\r\nimport ProjectPanel from './ProjectPanel';\r\nimport Repo from '../Types/Repo';\r\n\r\ninterface IRepos \r\n{\r\n    repos: Repo[];\r\n}\r\n\r\nconst PanelCollection = (props: IRepos) =>\r\n{\r\n    const panels = props.repos.map( (i, idx) => {\r\n        return <ProjectPanel key={idx} repo={i} />\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {panels}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PanelCollection;","/**Politely Asks github for list of repos */ \r\nconst getRepos = async (url:string) =>\r\n{\r\n    const response = await fetch(url);\r\n    return await response.json();\r\n}\r\n\r\nexport default getRepos;","import React, {useEffect} from 'react';\r\nimport PanelCollection from '../Components/PanelCollection';\r\nimport getRepos from '../scripts/getRepos';\r\n// import {Jumbotron} from 'react-bootstrap';\r\nimport CustomJumbotron from '../Components/CustomJumbotron'\r\n\r\nconst Projects = () =>\r\n{\r\n    const [repos, setRepos] = React.useState([]);\r\n    const url:string = 'https://api.github.com/users/Dovahkid/repos';\r\n\r\n    useEffect(() => {\r\n        getRepos(url).then( (data) => {setRepos(data)});\r\n    }, []); \r\n\r\n    return (\r\n        repos.length ? \r\n        <div className=\"container\">\r\n            <CustomJumbotron header=\"My Projects\">\r\n                <p>This page contains links and short descriptions for each of my github projects. \r\n                    The list is not curated but is instead automatically pulled when the page is loaded. \r\n                    Web projects will have links to the site and all projects will have links to the repos.</p>\r\n            </CustomJumbotron>\r\n            <PanelCollection repos={repos}/>\r\n        </div>\r\n        :\r\n        <span>Loading...</span>\r\n    );\r\n}\r\n\r\nexport default Projects;","import {Component} from 'react';\r\nimport './App.scss';\r\nimport './Components/Navigation';\r\nimport Navigation from './Components/Navigation';\r\nimport Home from './Pages/Home';\r\nimport Projects from './Pages/Projects';\r\n\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nclass App extends Component \r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n\r\n          <Navigation/>\r\n          \r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/Projects\" exact component={Projects}/>\r\n            <Route path=\"/\" component={Home}/>\r\n          </Switch>\r\n\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}